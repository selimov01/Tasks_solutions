'''
Реши задачу ниже:
При обучении нейросетей распознаванию образов требуется довольно много вычислительных ресурсов, в результате чего обучение зачастую занимает очень много времени. Один из способов ускорить обучение — сжимать картинки обучающей выборки до меньших размеров.

Для быстрого, но качественного сжатия картинки можно применить самый простой метод — сжать картинку ровно в k раз как по горизонтали, так и по вертикали. В таком случае исходное изображение должно разбиваться на квадрат k×k, каждый из которых будет заменён на один пиксель (в соответствии с некоторым алгоритмом).
Разумеется, не каждое изображение можно сжать в произвольное число раз. Например, картинку 640×480 можно сжать в 10 раз, но нельзя сжать в 3 раза.

Вам дано изображение размерами w×h пикселей. Найдите все такие натуральные k>1, что данное изображение можно сжать в k раз.

Формат ввода
Первая строка содержит два целых числа — w и h — размеры исходного изображения (1≤w,h≤10^12).

Формат вывода
В первой строке выведите число n — количество допустимых значений числа k.
Во второй строке выведите эти n значений в порядке возрастания.
'''

def euclidean_alg(a, b): 
    while b != 0: 
        a, b = b, a % b 
    return a
    
w, h = map(int, input().split())

gcd = euclidean_alg(w, h)

divisors = []

if gcd > 1:

    for i in range(2, int(gcd ** 0.5) + 1):
        if gcd % i == 0:
            divisors.append(i)

            if i != gcd // i:
                divisors.append(gcd // i)

    if gcd > 1:
        divisors.append(gcd)
    
    divisors = sorted(list(set(divisors)))
    
print(len(divisors))
if divisors:
    print(' '.join(map(str, divisors)))